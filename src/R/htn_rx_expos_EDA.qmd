---
title: "EDA for HTN medication exposure pattern"
author: "Xing Song"
format: html
editor: visual
execute: 
  echo: false
  message: false
  warning: false
---

## load packages

```{r}
#| label: load-pkg
pacman::p_load(
  tidyverse,
  magrittr,
  stringr,
  broom,
  cowplot,
  ggrepel,
  kableExtra,
  # gtsummary,
  devtools
)
source_url("https://raw.githubusercontent.com/sxinger/utils/master/analysis_util.R")
root_dir<-file.path(
  'C:',"repos","r61-r33-vccc-kumc"
)
```

# Data Availability & Coverage

```{r}
#| label: data-avail
#| warning: false

bp_long<-readRDS(file.path(root_dir,"private","bp_long.rda"))
part_ind<-readRDS(file.path(root_dir,"private","part_ind.rda"))

id<-unique(bp_long$study_id) #634
id_ku<-id[grepl("^(KU)+",id)] #527
id_ut<-id[grepl("^(UT)+",id)] #105

bp_ku<-bp_long %>% 
  inner_join(part_ind,by="study_id") %>%
  filter(bp_type=="sbp") %>%
  filter(grepl("^(KU)+",toupper(study_id))) %>%
  group_by(study_id,type,intx_ind) %>%
  mutate(days_since_index_lag1 = lag(days_since_index,n=1L)) %>%
  ungroup %>%
  mutate(days_since_last = days_since_index - days_since_index_lag1)

bp_ku %>% 
  group_by(study_id,type) %>%
  summarize(
    cnt = length(unique(days_since_index)),
    delta_m = mean(days_since_last,na.rm=T),
    delta_sd = sd(days_since_last,na.rm=T),
    .groups = 'drop') %>%
  mutate(prop = round(cnt/length(id_ku),3)) %>%
  group_by(type) %>%
  summarize(
    pat_n = length(unique(study_id)),
    cnt_m = round(mean(cnt)),
    cnt_sd = round(sd(cnt),1),
    cnt_med = round(median(cnt)),
    cnt_q1 = round(quantile(cnt,prob =0.25)),
    cnt_q3 = round(quantile(cnt,prob =0.75)),
    delta_m_m = round(mean(delta_m,na.rm=T)),
    delta_m_sd = round(sd(delta_m,na.rm=T),1), 
    delta_m_med = round(median(delta_m,na.rm=T)),
    delta_m_q1 = round(quantile(delta_m,prob =0.25,na.rm=T)),
    delta_m_q3 = round(quantile(delta_m,prob =0.75,na.rm=T)),
    .groups = 'drop'
  )

```

-   `baseline`: BP extracts from Qardio at baseline visit, serving as *index_date*
-   `clinic`: BP collected at visits which got transformed into CDM VITAL table (excluding IP, ED, EI)
-   `elig`: BP collected at two adjacent visits when eligibility criteria was satisfied
-   `visit`: daily Qardio extracts for taken at home

Let's take a look at a few BP trajectory examples:

```{r}
#| label: plot-bp
#| fig-width: 12
#| fig-height: 10

k<-2
id_sample<-sample(id_ku,k)
  
# individual plots of a random sample of size k
ggplot(
  bp_long %>% filter(study_id %in% id_sample),
  aes(x = days_since_index,
      y = bp_val,
      color = bp_type)
)+
  geom_line(aes(group = bp_type))+
  geom_point(aes(shape = type),size=3,alpha=0.6)+
  geom_vline(xintercept = 0,linetype=2) +
  facet_wrap(~study_id,scales = "free",ncol=1)
```

## Clinic BP vs. Home BP at Baseline

```{r}
#| label: bp-baseline-plot
#| warning: false

baseline_gap<-bp_long %>% 
  filter(grepl("^(KU)+",study_id)) %>%
  filter(type %in% c("elig","baseline")) %>%
  group_by(study_id,bp_type) %>%
  mutate(
    gap = bp_val[type=="baseline"] - median(bp_val[type=="elig"]),
    elig_since_index = max(days_since_index[type=="elig"],na.rm=T)
  ) %>%
  mutate(gap_sign = sign(gap)) %>%
  mutate(gap_sign = case_when(bp_type=="sbp"&bp_val[type=="baseline"]<130 ~ -2,
                              TRUE ~ gap_sign)) %>%
  mutate(gap_sign = recode(
    gap_sign,
    '-2' = '1.decrease-to-uneligible',
    '-1' = '2.decrease-but-eligible',
    '0' = '3.no-change',
    '1' = '4.increase'
  )) %>%
  ungroup %>%
  filter(!is.na(gap) & elig_since_index<=0) %>%
  select(study_id, bp_type, gap, elig_since_index, gap_sign) %>% 
  unique

ggplot(
  baseline_gap,
  aes(x = elig_since_index,
      y = gap,
      color = gap_sign)
)+
  # geom_line(aes(group = study_id))+
  geom_hline(yintercept = 0, linetype = 2)+
  geom_vline(xintercept = 0, linetype = 2)+
  geom_point()+
  facet_wrap(~bp_type)

baseline_gap %>%
  filter(bp_type == 'sbp') %>%
  group_by(gap_sign) %>%
  summarise(cnt = length(unique(study_id)),.groups='drop') %>%
  mutate(
    N = length(id_ku),
    prop = round(cnt/N,3)
  )
```

## Investigation: How much of the eligibility discrepancies can be explained by anti-hypertensive medication use during the pre-enrollment period?

We collected all prescription data from CDM PRESCRIBING table provided by KUMC team, using VA classifications, we identified the following medication classes as anti-HTN medications, and they are:

-   CV100: beta blockers/related

-   CV150: alpha blockers/related

-   CV200: calcium channel blockers

-   CV400: anti-hypertensive combinations

-   CV490: antihypertensive, others

-   CV701: thiazides/related diuretics

-   CV702: loop diuretics

-   CV703: carbonic anhydrase inhibitor diuretics

-   CV704: potassium sparing/combinations diretics

-   CV709: diuretics, other

-   CV800: ACE inhibitors

-   CV805: angiotensin II inhibitor

-   CV806: direct renin inhibitor

### Analysis I: How strongly is the clinic-home bp gap associated with anti-hypertensive medication prescrition during the run-in period?

```{r}
#| label: calc-med-runin
#| warning: false

med<-readRDS(file.path(root_dir,"private","med_long.rda"))

med_runin<-baseline_gap %>%
  select(study_id,elig_since_index,gap, gap_sign) %>% 
  group_by(study_id) %>% arrange(gap_sign) %>% slice(1:1) %>% ungroup %>%
  inner_join(
    med %>% select(study_id,VA_CLS,AntiHTN_ind,in_or_name_s,rx_start_since_index),
    by="study_id") %>%
  filter(
    rx_start_since_index<=0 & rx_start_since_index>=elig_since_index & 
    AntiHTN_ind==1)

med_in<-baseline_gap %>% select(study_id) %>% unique %>%
  left_join(
    med %>% filter(AntiHTN_ind==1) %>%
      select(study_id,in_or_name_s) %>% unique %>%
      mutate(ind = 1) %>%
      pivot_wider(
        names_from = "in_or_name_s",
        values_from = "ind",
        values_fill = 0
      ),
    by="study_id"
  ) %>%
  replace(is.na(.),0)

med_cls<-baseline_gap %>% select(study_id) %>% unique %>%
  left_join(
    med %>% filter(AntiHTN_ind==1) %>%
      select(study_id,VA_CLS) %>% unique %>%
      mutate(ind = 1) %>%
      pivot_wider(
        names_from = "VA_CLS",
        values_from = "ind",
        values_fill = 0
      ),
    by="study_id"
  ) %>%
  replace(is.na(.),0)

baseline_aset<-baseline_gap %>%
  filter(bp_type == 'sbp') %>% select(-bp_type) %>%
  group_by(study_id) %>% arrange(gap_sign) %>% slice(1:1) %>% ungroup %>%
  mutate(decr_ind = case_when(gap<0 ~ 1, TRUE ~ 0)) %>%
  mutate(sig_decr_ind = as.numeric(gap_sign=="1.decrease-to-uneligible")) %>%
  left_join(
    med_runin %>% select(study_id,AntiHTN_ind) %>% unique,
    by = "study_id"
  ) %>% 
  replace_na(list(AntiHTN_ind=0)) %>%
  inner_join(med_in,by = "study_id") %>%
  inner_join(med_cls,by = "study_id") %>%
  inner_join(part_ind,by = "study_id")
```


```{r}
#| label: risk-ratio
#| warning: false

var_lst<-c("elig_since_index","gap","gap_sign","decr_ind","sig_decr_ind","intx_ind")
facvar_lst<-c("gap_sign","decr_ind","sig_decr_ind","intx_ind")
cohort_summ<-univar_analysis_mixed(
  df = baseline_aset,
  id_col ="study_id",
  var_lst = var_lst,
  grp = baseline_aset$AntiHTN_ind,
  facvar_lst  = facvar_lst,
  pretty = T
)
cohort_summ %>% kable_paper(bootstrap_options = "striped", full_width = F)
```

## Analysis II: multi-variable modeling to investigate how much of BP drop can be explained by BP meds during the run-in period

```{r}
var_excld<-c(
  "study_id",
  "gap_sign",
  "decr_ind",
  "sig_decr_ind"
)
colnm<-colnames(baseline_aset)
colnm<-gsub(";","_",colnm)
colnm<-gsub(" ","_",colnm)
colnm<-gsub("/","_",colnm)
colnm<-gsub("-","_",colnm)
colnm<-gsub(",","_",colnm)

colnames(baseline_aset)<-colnm
var_lst<-colnames(baseline_aset)[!colnames(baseline_aset) %in% var_excld]
facvar_lst<-var_lst[
  !var_lst %in% c(
    "elig_since_index",
    "gap"
  )
]
cohort_summ<-univar_analysis_mixed(
  df = baseline_aset,
  id_col ="study_id",
  var_lst = var_lst,
  grp = baseline_aset$decr_ind,
  facvar_lst  = facvar_lst,
  pretty = F
)
var_sel<-cohort_summ %>%
  select(var,`p.value`) %>%
  unique %>%
  filter(`p.value`<=0.2) %>%
  filter(!var %in% c("gap"))
```



```{r}
# Specify a null model with no predictors
null_model <- glm(decr_ind ~ 1, 
                  data = baseline_aset, family = binomial())

# Specify the full model using all of the potential predictors
full_model <- glm(formula(paste0("decr_ind ~ ",paste(var_sel$var,collapse = "+"))), 
                  data = baseline_aset, family = binomial())

# Use a bi-directional stepwise algorithm to build a parsimonious model
step_model <- step(null_model,
                   scope = list(lower = null_model, upper = full_model),
                   direction = "both")

summary(step_model)

pROC::ggroc(pROC::roc(step_model$y, step_model$fitted))+
  geom_abline(intercept=1,linetype=2)+
  labs(subtitle = paste0("AUC:",round(pROC::auc(step_model$y, step_model$fitted),4)))

```

## Analysis III: 
